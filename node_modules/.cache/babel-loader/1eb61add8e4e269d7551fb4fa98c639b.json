{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\web\\\\web2\\\\src\\\\components\\\\blog\\\\BlogCommentForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogCommentForm = () => {\n  _s();\n  var _errors$comment, _errors$name, _errors$email, _errors$acceptTerms;\n  // for validation\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    comment: Yup.string().required(\"Pleae write your comment\"),\n    email: Yup.string().required(\"Email is required\").email(\"Entered value does not match email format\"),\n    acceptTerms: Yup.bool().oneOf([true], \"Accept Terms and Conditions is required\")\n  });\n  const formOptions = {\n    resolver: yupResolver(validationSchema)\n  };\n  // get functions to build form with useForm() hook\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm(formOptions);\n  const {\n    errors\n  } = formState;\n  function onSubmit(data, e) {\n    // display form data on success\n    console.log(\"Message submited: \" + JSON.stringify(data));\n    e.target.reset();\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        placeholder: \"Write your comment here\",\n        name: \"comment\",\n        ...register(\"projectGoal\"),\n        className: `${errors.comment ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), errors.comment && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$comment = errors.comment) === null || _errors$comment === void 0 ? void 0 : _errors$comment.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-row two-col\",\n      style: {\n        marginBottom: \".625rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Your name *\",\n          type: \"text\",\n          name: \"name\",\n          ...register(\"name\"),\n          className: `${errors.name ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Your Email *\",\n          name: \"email\",\n          type: \"text\",\n          ...register(\"email\"),\n          className: ` ${errors.email ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group agreement-checkbox \",\n      style: {\n        marginBottom: \"3.75rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"acceptTerms\",\n        type: \"checkbox\",\n        id: \"acceptTerms\",\n        ...register(\"acceptTerms\"),\n        className: ` ${errors.acceptTerms ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ptf-checkbox\",\n        htmlFor: \"acceptTerms\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ptf-checkbox__checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), \"Save my name & email in this browser for next time I comment.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), errors.acceptTerms && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$acceptTerms = errors.acceptTerms) === null || _errors$acceptTerms === void 0 ? void 0 : _errors$acceptTerms.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"form-submit\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ptf-submit-button ptf-submit-button--style-2\",\n        children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"currentColor\",\n          viewBox: \"0 0 17 17\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M16 .997V10h-1V2.703L4.683 13l-.707-.708L14.291 1.997H6.975v-1H16z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogCommentForm, \"FW3sJsj8gRxWrmRSQec/vgQ11EM=\", false, function () {\n  return [useForm];\n});\n_c = BlogCommentForm;\nexport default BlogCommentForm;\nvar _c;\n$RefreshReg$(_c, \"BlogCommentForm\");","map":{"version":3,"names":["React","useForm","yupResolver","Yup","BlogCommentForm","validationSchema","object","shape","name","string","required","comment","email","acceptTerms","bool","oneOf","formOptions","resolver","register","handleSubmit","formState","errors","onSubmit","data","e","console","log","JSON","stringify","target","reset","message","marginBottom"],"sources":["C:/Users/Dell/Downloads/web/web2/src/components/blog/BlogCommentForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst BlogCommentForm = () => {\r\n  // for validation\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Name is required\"),\r\n    comment: Yup.string().required(\"Pleae write your comment\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Entered value does not match email format\"),\r\n    acceptTerms: Yup.bool().oneOf(\r\n      [true],\r\n      \"Accept Terms and Conditions is required\"\r\n    ),\r\n  });\r\n\r\n  const formOptions = { resolver: yupResolver(validationSchema) };\r\n  // get functions to build form with useForm() hook\r\n  const { register, handleSubmit, formState } = useForm(formOptions);\r\n  const { errors } = formState;\r\n\r\n  function onSubmit(data, e) {\r\n    // display form data on success\r\n    console.log(\"Message submited: \" + JSON.stringify(data));\r\n    e.target.reset();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"ptf-form-group\">\r\n        <textarea\r\n          rows=\"5\"\r\n          placeholder=\"Write your comment here\"\r\n          name=\"comment\"\r\n          {...register(\"projectGoal\")}\r\n          className={`${errors.comment ? \"is-invalid\" : \"\"}`}\r\n        />\r\n        {errors.comment && (\r\n          <div className=\"invalid-feedback\">{errors.comment?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div className=\"ptf-form-row two-col\" style={{ marginBottom: \".625rem\" }}>\r\n        <div className=\"ptf-form-group\">\r\n          <input\r\n            placeholder=\"Your name *\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            {...register(\"name\")}\r\n            className={`${errors.name ? \"is-invalid\" : \"\"}`}\r\n          />\r\n          {errors.name && (\r\n            <div className=\"invalid-feedback\">{errors.name?.message}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"ptf-form-group\">\r\n          <input\r\n            placeholder=\"Your Email *\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            {...register(\"email\")}\r\n            className={` ${errors.email ? \"is-invalid\" : \"\"}`}\r\n          />\r\n          {errors.email && (\r\n            <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div\r\n        className=\"ptf-form-group agreement-checkbox \"\r\n        style={{ marginBottom: \"3.75rem\" }}\r\n      >\r\n        <input\r\n          name=\"acceptTerms\"\r\n          type=\"checkbox\"\r\n          id=\"acceptTerms\"\r\n          {...register(\"acceptTerms\")}\r\n          className={` ${errors.acceptTerms ? \"is-invalid\" : \"\"}`}\r\n        />\r\n\r\n        <label className=\"ptf-checkbox\" htmlFor=\"acceptTerms\">\r\n          <span className=\"ptf-checkbox__checkmark\"></span>Save my name & email\r\n          in this browser for next time I comment.\r\n        </label>\r\n        {errors.acceptTerms && (\r\n          <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <p className=\"form-submit\">\r\n        <button className=\"ptf-submit-button ptf-submit-button--style-2\">\r\n          Submit\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 17 17\"\r\n          >\r\n            <path d=\"M16 .997V10h-1V2.703L4.683 13l-.707-.708L14.291 1.997H6.975v-1H16z\" />\r\n          </svg>\r\n        </button>\r\n      </p>\r\n      {/* End .form-submit */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BlogCommentForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}